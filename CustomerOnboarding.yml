name: Deploy Alerts using bicep multistage
variables:
   azureServiceConnection: 'Squadra12k-SEBL'
   resourceGroupName: 'rg-infra'
   metricsTemplate: 'deployMetricsAlerts.bicep'
   logsTemplate: 'deployLogsAlerts.bicep'
   activityTemplate: 'deployActivityAlerts.bicep'
   metricsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json'
   logsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json'
pool:
  #name: Azure Pipelines
  name: Default
  #Default
  #demands: agent.name -equals mydockeragent

stages:
- stage: Audit
  jobs:
  - job: AuditDiag
    steps:
      - task: PowerShell@2
        displayName: 'Params'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: PowerShell@2
        displayName: 'Resources'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: PowerShell@2
        displayName: 'Extensions'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: PowerShell@2
        displayName: 'Logs and Metrics'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
- stage: MatrixGeneration
  jobs:
  - job: MatrixGen
    steps:
      - task: PowerShell@2
        displayName: 'Metric matrix gen'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: PowerShell@2
        displayName: 'Log matrix gen'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: PowerShell@2
        displayName: 'Admin alerts matrix gen'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: PowerShell@2
        displayName: 'Get Diagnostics Params'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: PowerShell@2
        displayName: 'Diagnostics Params settings gen'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # matrix ruploaded to storage account and validated
        inputs:
         notifyUsers: |
            sebastien.dillier@squadra-run.com
            sebastien.leroy@squadra-run.com
            
         instructions: 'Please validate the build configuration and resume'
         onTimeout: 'resume' 
      - task: PowerShell@2
        displayName: 'Deploy Resource Group and LAW-storage account'
        inputs:
          azureSubscription: $(azureServiceConnection)
          pwsh: true
          targetType: 'inline'
          script: inlineScript
          inlineScript: |
          write-host "ok"  

- stage: ActionGroups


  jobs:
  - job: DeployActionGroups
    steps:
    
    - task: PowerShell@2
      displayName: 'Deploy Action Groups'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
         az version
        
- stage: ConvertCSV2Json
  jobs:
  - job: ConvertMetricsAlertsCSVToJson
    steps:

          
       - task: PowerShell@2
         displayName: 'Deploy Action Groups'
         inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
           az version
   
  - job: ConvertLogsAlertsCSVToJson
    steps:
      - task: PowerShell@2
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
           az version
  - job: ConvertActivityLogsAlertsCSVToJson
    steps:
     - task: PowerShell@2
       displayName: 'Deploy Action Groups'
       inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
            az version
    
  - job: DevelopWaitingApproval
    dependsOn: ConvertMetricsAlertsCSVToJson
    pool: server
    timeoutInMinutes: 4320 # 3 days

- stage: DeployAlerts

  dependsOn: ConvertCSV2Json
  jobs:
  - job: DeployAllAlertsTypes
    steps:
    - checkout: none
    - task: PowerShell@2
      displayName: 'Deploy Action Groups'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
            az version

