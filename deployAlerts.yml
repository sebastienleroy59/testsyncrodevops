#trigger:
#- main

name: Deploy Alerts using bicep

variables:
   azureServiceConnection: 'SC-MPNSeb'
   resourceGroupName: 'supervisionbiceppoc'
   metricsTemplate: 'deployMetricsAlerts.bicep'
   logsTemplate: 'deployLogsAlerts.bicep'
   metricsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json'
   logsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json'
pool:
  name: Default

steps:

- task: PowerShell@2
  inputs:
    pwsh: true
    targetType: inline
    script: | 
      $csvMetrics=import-csv -Delimiter ";" "AlertsDefinitions/metricsAlerts.csv"
      foreach($alertLine in $csvMetrics){
        if($alertLine.alertDimensions -ne ""){
        
            $dimensionsArray=@()
            $dimensions = $alertLine.alertDimensions.Split(',')
        
            foreach($dimension in $dimensions){
                $splittedDimension = $dimension.Split('|')
                $dimensionsArray+=@{name = $splittedDimension[0];  operator = $splittedDimension[1]; values = ($splittedDimension[2] -ne "") ? @($splittedDimension[2].split('!')):"*" } 
            }
       
            $alertLine.alertDimensions = $dimensionsArray
            $alertLineIndex = $csvMetrics.IndexOf($alertLine)
            $csvMetrics[$alertLineIndex].alertDimensions= $alertLine.alertDimensions 
        }
      }
      
      $formattedAlerts = $csvMetrics | ConvertTo-Json -AsArray -Depth 4
      ((Get-Content -path AlertsDefinitions/metricsAlerts.json -Raw) -replace '"--TOREPLACE--"',$formattedAlerts ) | Set-Content -Path AlertsDefinitions/metricsAlerts.json
      Get-Content -path AlertsDefinitions/metricsAlerts.json
      
      
      
      
      
      
      $csvLogs=import-csv -Delimiter ";" "AlertsDefinitions/logsAlerts.csv"
      foreach($alertLine in $csvLogs){
        if($alertLine.alertDimensions -ne ""){
        
            $dimensionsArray=@()
            $dimensions = $alertLine.alertDimensions.Split(',')
        
            foreach($dimension in $dimensions){
                $splittedDimension = $dimension.Split('|')
                $dimensionsArray+=@{name = $splittedDimension[0];  operator = $splittedDimension[1]; values = ($splittedDimension[2] -ne "") ? @($splittedDimension[2].split('!')):"*" } 
            }
       
            $alertLine.alertDimensions = $dimensionsArray
            $alertLineIndex = $csvLogs.IndexOf($alertLine)
            $csvLogs[$alertLineIndex].alertDimensions= $alertLine.alertDimensions 
        }
      }
      
      $formattedAlerts = $csvLogs | ConvertTo-Json -AsArray -Depth 4
      ((Get-Content -path AlertsDefinitions/logsAlerts.json -Raw) -replace '"--TOREPLACE--"',$formattedAlerts ) | Set-Content -Path AlertsDefinitions/logsAlerts.json
      #Get-Content -Path AlertsDefinitions/logsAlerts.json


         
- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az --version
      #az deployment group create --resource-group $(resourceGroupName) --template-file $(metricsTemplate) --parameters $(metricsParametersFilePath)
      #az deployment group create --resource-group $(resourceGroupName) --template-file $(logsTemplate) --parameters $(logsParametersFilePath)
      