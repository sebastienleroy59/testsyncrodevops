name: Deploy Alerts using bicep multistage
variables:
   azureServiceConnection: 'SC-MPNSeb'
   resourceGroupName: 'supervisionbiceppoc'
   metricsTemplate: 'deployMetricsAlerts.bicep'
   logsTemplate: 'deployLogsAlerts.bicep'
   metricsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json'
   logsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json'
pool:
  name: Default

stages:
- stage: ConvertCSV2Json
  jobs:
  - job: ConvertMetricsAlertsCSVToJson
    steps:

          
    - task: PowerShell@2
      displayName: 'FormatMetricsToJSON'
      inputs:
       pwsh: true
       #scriptPath: '$(System.DefaultWorkingDirectory)/formatMetrics.ps1'
       filePath: '$(Agent.BuildDirectory)/s/formatMetrics.ps1'
       arguments:
          -typeOfAlertstoFormat 'metrics'
          -baseDir '$(System.DefaultWorkingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
       targetPath: '$(System.DefaultWorkingDirectory)'
       artifact: 'ParametersFilesMetrics'
       publishLocation: 'pipeline'
   
  - job: ConvertLogsAlertsCSVToJson
    steps:
    - task: PowerShell@2
      displayName: 'FormatLogsToJSON'
      inputs:
       pwsh: true
       #scriptPath: '$(System.DefaultWorkingDirectory)/formatMetrics.ps1'
       filePath: '$(Agent.BuildDirectory)/s/formatMetrics.ps1'
       arguments:
          -typeOfAlertstoFormat 'logs' 
          -baseDir '$(System.DefaultWorkingDirectory)'   
    - task: PublishPipelineArtifact@1
      displayName: 'PublishLogsArtifact'
      inputs:
       targetPath: '$(System.DefaultWorkingDirectory)'
       artifact: 'ParametersFilesLogs'
       publishLocation: 'pipeline'
    #- task: AzureCLI@2
    #  inputs:
    #    azureSubscription: $(azureServiceConnection)
    #    scriptType: bash
    #    scriptLocation: inlineScript
    #    inlineScript: |
    #      touch test.txt
    #      echo "the fucking content " > file.txt
    - task: PublishPipelineArtifact@1
      displayName: 'PublishMetricsArtifact'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)'
        artifact: 'ParametersFilesMetrics'
        publishLocation: 'pipeline'
   # - task: AzureCLI@2
   #   inputs:
    #    azureSubscription: $(azureServiceConnection)
    #    scriptType: bash
    #    scriptLocation: inlineScript
    #    inlineScript: |
    #      ls -R $(System.DefaultWorkingDirectory)
    #      #cat $(Pipeline.Workspace)/AlertsDefinitions/logsAlerts.json
    #      cat $(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json
          
  - job: DevelopWaitingApproval
    dependsOn: ConvertMetricsAlertsCSVToJson
    pool: server
    timeoutInMinutes: 4320 # 3 days

    #steps:

    #- task: ManualValidation@0
    #  displayName: WaitingApproval
    #  
    #  timeoutInMinutes: 1440 # task times out in 1 day
    #  inputs:
    #    notifyUsers: |
    #      sebastien.dillier@squadra-run.com
    #    instructions: 'Please validate the build configuration and resume'
    #    onTimeout: 'resume'
   
      


- stage: DeployAlerts

  dependsOn: ConvertCSV2Json
  jobs:
  - job: DeployMetricAlerts
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      displayName: 'DownloadMetricsArtifact'
      inputs:
        buildType: 'current'
        artifactName: 'ParametersFilesMetrics'
        targetPath: '$(System.DefaultWorkingDirectory)'
        patterns: '**'

    - task: AzureCLI@2
      displayName: 'Deploy Metrics Alerts'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(metricsTemplate) --parameters $(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json

    - task: DownloadPipelineArtifact@2
      displayName: 'DownloadLogsArtifact'
      inputs:
        buildType: 'current'
        artifactName: 'ParametersFilesLogs'
        targetPath: '$(System.DefaultWorkingDirectory)'
        patterns: '**'

    - task: AzureCLI@2
      displayName: 'Deploy Logs Alerts'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(logsTemplate) --parameters $(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json
