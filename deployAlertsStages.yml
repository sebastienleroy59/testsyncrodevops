name: Deploy Alerts using bicep multistage
variables:
   azureServiceConnection: 'SC-MPNSeb'
   resourceGroupName: 'supervisionbiceppoc'
   metricsTemplate: 'deployMetricsAlerts.bicep'
   logsTemplate: 'deployLogsAlerts.bicep'
   metricsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json'
   logsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json'
pool:
  name: Default

stages:
- stage: ConvertCSV2Json
  jobs:
  - job: ConvertMetricsAlertsCSVToJson
    steps:
    - task: PowerShell@2
      inputs:
       pwsh: true
       #scriptPath: '$(System.DefaultWorkingDirectory)/formatMetrics.ps1'
       filePath: '$(Agent.BuildDirectory)/s/formatMetrics.ps1'
       arguments:
          -typeOfAlertstoFormat 'metrics'
          -baseDir '$(System.DefaultWorkingDirectory)'
  - job: ConvertLogsAlertsCSVToJson
    steps:
    - task: PowerShell@2
      inputs:
       pwsh: true
       #scriptPath: '$(System.DefaultWorkingDirectory)/formatMetrics.ps1'
       filePath: '$(Agent.BuildDirectory)/s/formatMetrics.ps1'
       arguments:
          -typeOfAlertstoFormat 'logs' 
          -baseDir '$(System.DefaultWorkingDirectory)'   

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)'
        artifact: 'ParametersFiles'
        publishLocation: 'pipeline'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**'
        TargetFolder: '$(System.DefaultWorkingDirectory)'
        OverWrite: true

  - job: DevelopWaitingApproval
    dependsOn: ConvertMetricsAlertsCSVToJson
    pool: server
    timeoutInMinutes: 4320 # 3 days

    #steps:

    #- task: ManualValidation@0
    #  displayName: WaitingApproval
    #  
    #  timeoutInMinutes: 1440 # task times out in 1 day
    #  inputs:
    #    notifyUsers: |
    #      sebastien.dillier@squadra-run.com
    #    instructions: 'Please validate the build configuration and resume'
    #    onTimeout: 'resume'
   
      


- stage: DeployAlerts
  jobs:
  - job: DeployMetricAlerts
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'ParametersFiles'
        targetPath: '$(System.DefaultWorkingDirectory)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**'
        TargetFolder: '$(System.DefaultWorkingDirectory)'
        OverWrite: true
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo $(metricsParametersFilePath)
          cat $(metricsParametersFilePath)
          cat $(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json
          #az deployment group create --resource-group $(resourceGroupName) --template-file $(metricsTemplate) --parameters $(metricsParametersFilePath)
  - job: DeployLogsAlerts
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo $(logsParametersFilePath)
          cat $(logsParametersFilePath)
          cat $(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json
          #az deployment group create --resource-group $(resourceGroupName) --template-file $(logsTemplate) --parameters $(logsParametersFilePath)
              