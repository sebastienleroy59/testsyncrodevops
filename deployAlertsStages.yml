name: Deploy Alerts using bicep multistage
variables:
   azureServiceConnection: 'SC-Squadra12Kâ‚¬'
   resourceGroupName: 'rg-infra'
   metricsTemplate: 'deployMetricsAlerts.bicep'
   logsTemplate: 'deployLogsAlerts.bicep'
   activityTemplate: 'deployActivityAlerts.bicep'
   metricsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json'
   logsParametersFilePath: '$(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json'
pool:
  #name: Azure Pipelines
  name: Default
  #Default
  demands: agent.name -equals mydockeragent

stages:
- stage: ActionGroups


  jobs:
  - job: DeployActionGroups
    steps:
    
    - task: AzureCLI@2
      displayName: 'Deploy Action Groups'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(System.DefaultWorkingDirectory)/deployActionGroups.bicep

- stage: ConvertCSV2Json
  jobs:
  - job: ConvertMetricsAlertsCSVToJson
    steps:

          
    - task: PowerShell@2
      displayName: 'FormatMetricsToJSON'
      inputs:
       pwsh: true
       filePath: '$(Agent.BuildDirectory)/s/formatMetrics.ps1'
       arguments:
          -typeOfAlertstoFormat 'metrics'
          -baseDir '$(System.DefaultWorkingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
       targetPath: '$(System.DefaultWorkingDirectory)'
       artifact: 'ParametersFilesMetrics'
       publishLocation: 'pipeline'
   
  - job: ConvertLogsAlertsCSVToJson
    steps:
    - task: PowerShell@2
      displayName: 'FormatLogsToJSON'
      inputs:
       pwsh: true
       filePath: '$(Agent.BuildDirectory)/s/formatMetrics.ps1'
       arguments:
          -typeOfAlertstoFormat 'logs' 
          -baseDir '$(System.DefaultWorkingDirectory)'   
    - task: PublishPipelineArtifact@1
      displayName: 'PublishLogsArtifact'
      inputs:
       targetPath: '$(System.DefaultWorkingDirectory)'
       artifact: 'ParametersFilesLogs'
       publishLocation: 'pipeline'
  - job: ConvertActivityLogsAlertsCSVToJson
    steps:
    - task: PowerShell@2
      displayName: 'FormatActivityLogsToJSON'
      inputs:
       pwsh: true
       filePath: '$(Agent.BuildDirectory)/s/formatMetrics.ps1'
       arguments:
          -typeOfAlertstoFormat 'activity' 
          -baseDir '$(System.DefaultWorkingDirectory)'   
    - task: PublishPipelineArtifact@1
      displayName: 'PublishActivityLogsArtifact'
      inputs:
       targetPath: '$(System.DefaultWorkingDirectory)'
       artifact: 'ParametersFilesActivityLogs'
       publishLocation: 'pipeline'
    
  - job: DevelopWaitingApproval
    dependsOn: ConvertMetricsAlertsCSVToJson
    pool: server
    timeoutInMinutes: 4320 # 3 days

- stage: DeployAlerts

  dependsOn: ConvertCSV2Json
  jobs:
  - job: DeployMetricAlerts
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      displayName: 'DownloadMetricsArtifact'
      inputs:
        buildType: 'current'
        artifactName: 'ParametersFilesMetrics'
        targetPath: '$(System.DefaultWorkingDirectory)'
        patterns: '**'

    - task: AzureCLI@2
      displayName: 'Deploy Metrics Alerts'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(metricsTemplate) --parameters $(System.DefaultWorkingDirectory)/AlertsDefinitions/metricsAlerts.json

    - task: DownloadPipelineArtifact@2
      displayName: 'DownloadLogsArtifact'
      inputs:
        buildType: 'current'
        artifactName: 'ParametersFilesLogs'
        targetPath: '$(System.DefaultWorkingDirectory)'
        patterns: '**'

    - task: AzureCLI@2
      displayName: 'Deploy Logs Alerts'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(logsTemplate) --parameters $(System.DefaultWorkingDirectory)/AlertsDefinitions/logsAlerts.json

    - task: DownloadPipelineArtifact@2
      displayName: 'DownloadAcitivyLogsArtifact'
      inputs:
        buildType: 'current'
        artifactName: 'ParametersFilesActivityLogs'
        targetPath: '$(System.DefaultWorkingDirectory)'
        patterns: '**'

    - task: AzureCLI@2
      displayName: 'Deploy ActivityLog Alerts'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(activityTemplate) --parameters $(System.DefaultWorkingDirectory)/AlertsDefinitions/activityAlerts.json
